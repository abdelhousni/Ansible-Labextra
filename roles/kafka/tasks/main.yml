---
- name: Ensure podman, podman plugins, and java are installed
  ansible.builtin.dnf:
    name:
      - podman
      - podman-plugins
      - java
    state: present

- name: Open Firewalld for Kafka
  ansible.posix.firewalld:
    port: 9092/tcp
    permanent: true
    state: enabled
  notify: Restart Firewalld

- name: Open Firewalld for ZooKeeper
  ansible.posix.firewalld:
    port: 2181/tcp
    permanent: true
    state: enabled
  notify: Restart Firewalld

- name: Force all notified handlers to run at this point
  ansible.builtin.meta: flush_handlers

- name: Ensure "messaging" network exists
  containers.podman.podman_network:
    name: messaging
    state: present

- name: Start the ZooKeeper container
  containers.podman.podman_container:
    name: zookeeper
    image: bitnami/zookeeper
    state: started
    env:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - 2181:2181
    network: messaging

- name: Start the Kafka container
  containers.podman.podman_container:
    name: kafka
    image: bitnami/kafka
    state: started
    env:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://{{ inventory_hostname }}:9092
    ports:
      - 9092:9092
    network: messaging

- name: Extract kafka tar
  ansible.builtin.unarchive:
    src: https://downloads.apache.org/kafka/3.7.0/kafka_2.13-3.7.0.tgz
    dest: /opt
    remote_src: true

- name: Create Kafka topic
  ansible.builtin.command: /opt/kafka_2.13-3.7.0/bin/kafka-topics.sh --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic {{ topic
    }}
  register: kafkatopic
  changed_when: kafkatopic.stdout == "Created topic " ~ topic ~ "."
  failed_when:
    - '"already exists" not in kafkatopic.stderr'
    - kafkatopic.stdout != "Created topic " ~ topic ~ "."
  tags:
    - createtopic
